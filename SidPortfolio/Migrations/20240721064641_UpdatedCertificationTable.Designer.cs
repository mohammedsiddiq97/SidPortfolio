// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SidPortfolio.DBContext;

#nullable disable

namespace SidPortfolio.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20240721064641_UpdatedCertificationTable")]
    partial class UpdatedCertificationTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SidPortfolio.Models.CertificationAssociationModel", b =>
                {
                    b.Property<int>("CertificationAssociationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CertificationAssociationId"));

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CertificationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("IssuingOrganization")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("CertificationAssociationId");

                    b.HasIndex("CertificationId")
                        .IsUnique();

                    b.ToTable("CertificationAssociation");
                });

            modelBuilder.Entity("SidPortfolio.Models.CertificationModel", b =>
                {
                    b.Property<int>("CertificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CertificationId"));

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ContentType")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("Data")
                        .HasColumnType("longblob");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("CertificationId");

                    b.ToTable("Certifications");
                });

            modelBuilder.Entity("SidPortfolio.Models.ContactUsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<ulong>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ContactUs", (string)null);
                });

            modelBuilder.Entity("SidPortfolio.Models.ExperienceModel", b =>
                {
                    b.Property<int>("ExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ExperienceId"));

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Company")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Duration")
                        .HasColumnType("longtext");

                    b.Property<string>("JobTitle")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ExperienceId");

                    b.ToTable("Experience");
                });

            modelBuilder.Entity("SidPortfolio.Models.ExperienceResponsibilitiesAssociationModel", b =>
                {
                    b.Property<int>("ExperienceResponsibilitiesAssociationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ExperienceResponsibilitiesAssociationId"));

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ExperienceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Responsibilities")
                        .HasColumnType("longtext");

                    b.HasKey("ExperienceResponsibilitiesAssociationId");

                    b.HasIndex("ExperienceId");

                    b.ToTable("ExperienceResponsibilitiesAssociation");
                });

            modelBuilder.Entity("SidPortfolio.Models.ProjectAssociationModel", b =>
                {
                    b.Property<int>("ProjectAssociationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProjectAssociationId"));

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("GitHubLink")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("ProjectAssociationId");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("ProjectAssociation");
                });

            modelBuilder.Entity("SidPortfolio.Models.ProjectModel", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ContentType")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("Data")
                        .HasColumnType("longblob");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("ProjectId");

                    b.ToTable("ProjectFile");
                });

            modelBuilder.Entity("SidPortfolio.Models.TechnicalSkillModel", b =>
                {
                    b.Property<int>("TechnicalSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TechnicalSkillId"));

                    b.Property<ulong>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TechnicalSkillId");

                    b.ToTable("TechnicalSkill", (string)null);
                });

            modelBuilder.Entity("SidPortfolio.Models.CertificationAssociationModel", b =>
                {
                    b.HasOne("SidPortfolio.Models.CertificationModel", "certificationModel")
                        .WithOne("CertificationAssociation")
                        .HasForeignKey("SidPortfolio.Models.CertificationAssociationModel", "CertificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("certificationModel");
                });

            modelBuilder.Entity("SidPortfolio.Models.ExperienceResponsibilitiesAssociationModel", b =>
                {
                    b.HasOne("SidPortfolio.Models.ExperienceModel", "ExperienceModel")
                        .WithMany("ExperienceResponsibilitiesAssociation")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExperienceModel");
                });

            modelBuilder.Entity("SidPortfolio.Models.ProjectAssociationModel", b =>
                {
                    b.HasOne("SidPortfolio.Models.ProjectModel", "ProjectModel")
                        .WithOne("ProjectAssociation")
                        .HasForeignKey("SidPortfolio.Models.ProjectAssociationModel", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectModel");
                });

            modelBuilder.Entity("SidPortfolio.Models.CertificationModel", b =>
                {
                    b.Navigation("CertificationAssociation");
                });

            modelBuilder.Entity("SidPortfolio.Models.ExperienceModel", b =>
                {
                    b.Navigation("ExperienceResponsibilitiesAssociation");
                });

            modelBuilder.Entity("SidPortfolio.Models.ProjectModel", b =>
                {
                    b.Navigation("ProjectAssociation");
                });
#pragma warning restore 612, 618
        }
    }
}
